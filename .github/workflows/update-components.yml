name: Update Components

on:
  schedule:
    # Ejecutar todos los lunes a las 09:00 UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
  push:
    paths:
      - 'components_config.json'
      - 'update_components.py'

# CR√çTICO: A√±adir permisos necesarios
permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  check-updates:
    runs-on: ubuntu-latest
    outputs:
      updates-available: ${{ steps.check.outputs.updates-available }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Check for updates
      id: check
      run: |
        if python update_components.py --check; then
          echo "updates-available=false" >> $GITHUB_OUTPUT
          echo "No hay actualizaciones disponibles"
        else
          echo "updates-available=true" >> $GITHUB_OUTPUT
          echo "Actualizaciones disponibles encontradas"
        fi

  update-components:
    needs: check-updates
    if: needs.check-updates.outputs.updates-available == 'true'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Update components
      run: |
        python update_components.py

    - name: Generate commit message
      id: commit-msg
      run: |
        echo "commit-message<<EOF" >> $GITHUB_OUTPUT
        echo "ü§ñ Actualizaci√≥n autom√°tica de componentes" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        if [ -f "updates.json" ]; then
          echo "Componentes actualizados:" >> $GITHUB_OUTPUT
          python3 -c "import json; updates = json.load(open('updates.json')); [print(f'- {comp}: {info[\"current\"]} ‚Üí {info[\"latest\"]}') for comp, info in updates.items()]" >> $GITHUB_OUTPUT 2>/dev/null || echo "- Error al procesar actualizaciones" >> $GITHUB_OUTPUT
        else
          echo "- No se encontr√≥ informaci√≥n de actualizaciones" >> $GITHUB_OUTPUT
        fi
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: ${{ steps.commit-msg.outputs.commit-message }}
        title: "ü§ñ Actualizaci√≥n autom√°tica de componentes"
        body: |
          ## üîÑ Actualizaci√≥n Autom√°tica de Componentes
          
          Este PR fue creado autom√°ticamente para actualizar los componentes de Lovelace a sus √∫ltimas versiones.
          
          ### Componentes Actualizados
          
          ${{ steps.commit-msg.outputs.commit-message }}
          
          ### ‚úÖ Verificaciones Realizadas
          - [x] Descarga exitosa de archivos
          - [x] Verificaci√≥n de integridad de archivos
          - [x] Actualizaci√≥n de informaci√≥n de versiones
          
          ### üìã Pr√≥ximos Pasos
          
          1. Revisar los cambios en los archivos
          2. Verificar que no haya breaking changes en los componentes originales
          3. Probar los componentes en tu instancia de Home Assistant
          4. Hacer merge de este PR si todo funciona correctamente
          
          ### üîç Archivos Modificados
          
          Los siguientes tipos de archivos fueron actualizados:
          - `*.js` - Archivos JavaScript de los componentes
          - `version.json` - Informaci√≥n de versi√≥n actualizada
          - `README.md` - Documentaci√≥n de los componentes (si cambi√≥)
          
          ---
          
          **Ejecutado autom√°ticamente el**: ${{ steps.date.outputs.date }}
        branch: update-components-${{ github.run_number }}
        delete-branch: true
        draft: false
        base: main

  notify-no-updates:
    needs: check-updates
    if: needs.check-updates.outputs.updates-available == 'false'
    runs-on: ubuntu-latest
    
    steps:
    - name: No updates notification
      run: |
        echo "‚úÖ Todos los componentes est√°n actualizados. No se requieren cambios."