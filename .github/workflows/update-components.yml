name: Update Components

on:
  schedule:
    # Ejecutar todos los lunes a las 09:00 UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
  push:
    paths:
      - 'components_config.json'
      - 'update_components.py'

jobs:
  check-updates:
    runs-on: ubuntu-latest
    outputs:
      updates-available: ${{ steps.check.outputs.updates-available }}
      updates-json: ${{ steps.check.outputs.updates-json }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Check for updates
      id: check
      run: |
        # Ejecutar check y capturar el exit code
        if python update_components.py --check; then
          echo "updates-available=false" >> $GITHUB_OUTPUT
          echo "No hay actualizaciones disponibles"
        else
          echo "updates-available=true" >> $GITHUB_OUTPUT
          echo "Actualizaciones disponibles encontradas"
        fi

  update-components:
    needs: check-updates
    if: needs.check-updates.outputs.updates-available == 'true'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Update components
      run: |
        python update_components.py

    - name: Get updates information
      id: updates-info
      run: |
        if [ -f "updates.json" ]; then
          echo "UPDATES_JSON<<EOF" >> $GITHUB_OUTPUT
          cat updates.json >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi

    - name: Generate commit message
      id: commit-msg
      run: |
        echo "COMMIT_MSG<<EOF" >> $GITHUB_OUTPUT
        echo "ü§ñ Actualizaci√≥n autom√°tica de componentes" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        if [ -f "updates.json" ]; then
          echo "Componentes actualizados:" >> $GITHUB_OUTPUT
          python -c "
        import json
        try:
            with open('updates.json', 'r') as f:
                updates = json.load(f)
            for component, info in updates.items():
                print(f'- {component}: {info[\"current\"]} ‚Üí {info[\"latest\"]}')
        except:
            print('- Informaci√≥n de actualizaciones no disponible')
        " >> $GITHUB_OUTPUT
        fi
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: ${{ steps.commit-msg.outputs.COMMIT_MSG }}
        title: "ü§ñ Actualizaci√≥n autom√°tica de componentes"
        body: |
          ## üîÑ Actualizaci√≥n Autom√°tica de Componentes
          
          Este PR fue creado autom√°ticamente para actualizar los componentes de Lovelace a sus √∫ltimas versiones.
          
          ### Componentes Actualizados
          
          ${{ steps.commit-msg.outputs.COMMIT_MSG }}
          
          ### ‚úÖ Verificaciones Realizadas
          - [x] Descarga exitosa de archivos
          - [x] Verificaci√≥n de integridad de archivos
          - [x] Actualizaci√≥n de informaci√≥n de versiones
          
          ### üìã Pr√≥ximos Pasos
          
          1. Revisa los cambios en los archivos
          2. Verifica que no haya breaking changes en los componentes originales
          3. Prueba los componentes en tu instancia de Home Assistant
          4. Haz merge de este PR si todo funciona correctamente
          
          ### üîç Archivos Modificados
          
          Los siguientes tipos de archivos fueron actualizados:
          - `*.js` - Archivos JavaScript de los componentes
          - `version.json` - Informaci√≥n de versi√≥n actualizada
          - `README.md` - Documentaci√≥n de los componentes (si cambi√≥)
          
          ---
          
          **Ejecutado autom√°ticamente el**: ${{ steps.date.outputs.date }}
        branch: update-components-${{ github.run_number }}
        delete-branch: true
        draft: false
          

  notify-no-updates:
    needs: check-updates
    if: needs.check-updates.outputs.updates-available == 'false'
    runs-on: ubuntu-latest
    
    steps:
    - name: No updates notification
      run: |
        echo "‚úÖ Todos los componentes est√°n actualizados. No se requieren cambios."